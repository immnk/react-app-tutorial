{"version":3,"sources":["Lesson1/Button/Button.js","Lesson1/Display/Display.js","Lesson1/Lesson1.js","Lesson2/Lesson2.js","Lesson3/Lesson3.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","className","onClick","onClickEvent","increment","Display","message","Lesson1","_useState","useState","_useState2","Object","slicedToArray","counter","setCounter","incrementCounter","incrementValue","Lesson1_Button_Button","Lesson1_Display_Display","Lesson2","_ref","precision","arrayDestructing","firstValue","thirdValue","restOfItems","slice","person","firstName","spouse","temp1","temp2","details","_ref2","radius","_ref3$precision","arguments","length","undefined","Math","PI","toFixed","circleArea","label","CardList","this","profiles","map","profile","Lesson3_Card","assign","key","id","React","Component","Card","src","avatar_url","alt","name","company","Form","state","userName","handleSubmit","_callee","event","request","response","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","concat","_this","sent","json","onResponse","setState","stop","handleOnChange","target","value","onSubmit","type","placeholder","onChange","required","Lesson3","formResponsHandler","userInfo","console","log","_this2","prevState","toConsumableArray","title","Lesson3_Form","Lesson3_CardList","App","lessonNumber","setLesson","changeLesson","src_Lesson1_Lesson1","src_Lesson2_Lesson2","src_Lesson3_Lesson3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36d28f5d.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nfunction Button(props) {\n    const handleClick = () => props.onClickEvent(props.increment);\n    return (\n        <button className=\"button\" onClick={handleClick}>\n            +{props.increment}\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport './Display.css';\n\nfunction Display(props) {\n    return (\n        <div className=\"messageBox\">{props.message}</div>\n    );\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport Button from './Button/Button';\nimport Display from './Display/Display';\nimport './Lesson1.css';\n\nfunction Lesson1() {\n  const [counter, setCounter] = useState(0);\n  const incrementCounter = (incrementValue) => setCounter(counter + incrementValue);\n  \n  return (\n    <div className=\"lesson1\">\n      <Button onClickEvent={incrementCounter} increment={1}/>\n      <Button onClickEvent={incrementCounter} increment={5}/>\n      <Button onClickEvent={incrementCounter} increment={10}/>\n      <Display message={counter}/>\n    </div>\n  );\n}\n\nexport default Lesson1;\n","import React from 'react';\nimport './Lesson2.css';\n\nfunction Lesson2({precision}) {\n    const circle = {\n        radius : 2,\n        label: 'Label X'\n    };\n\n    const circleArea = ({radius}, {precision = 2} = {}) => (Math.PI * radius * radius).toFixed(precision);\n\n    const arrayDestructing = [10, 23, 56, 78];\n    const [firstValue, , thirdValue] = arrayDestructing;\n    const [, ...restOfItems] = arrayDestructing;\n\n    const person = {\n        firstName: 'Mani',\n        spouse: 'Aradhana',\n        temp1: 1,\n        temp2: 2\n    };\n\n    const {temp1, temp2, details} = person;\n\n    return (\n        <div className=\"lesson2\">\n            <h3>Lesson 2</h3>\n            <pre>{circleArea(circle, {precision: precision})}</pre>\n            <pre>Array Destructuring: { firstValue } { thirdValue } </pre>\n            <pre>Rest operator: { restOfItems }</pre>\n            <pre>{temp1} {temp2} {details}</pre>\n        </div>\n    );\n}\n\nexport default Lesson2;","import React from 'react';\nimport './Lesson3.scss';\n// eslint-disable-next-line no-unused-vars\nimport { async } from 'q';\n\nclass CardList extends React.Component {\n    render() {\n        return (\n            <div>\n                { this.props.profiles.map(profile => <Card key={profile.id} {...profile}/>) }\n            </div>\n        );\n    }\n}\n\nclass Card extends React.Component {\n    render() {\n        const profile = this.props;\n        return (\n            <div className=\"github-profile\">\n                <img src={profile.avatar_url} alt=\"avatar\"/>\n                <div className=\"info\">\n                    <div className=\"name\">{profile.name}</div>\n                    <div className=\"company\">{profile.company}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Form extends React.Component {\n    state = { userName: '' }\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const request = await fetch(`https://api.github.com/users/${this.state.userName}`);\n        const response = await request.json();\n        this.props.onResponse(response);\n        this.setState({ userName: '' });\n    };\n    handleOnChange = (event) => this.setState({ userName: event.target.value });\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    type=\"text\" \n                    placeholder=\"Github username\" \n                    value = {this.state.userName}\n                    onChange = {this.handleOnChange}\n                    required \n                />\n                <button className=\"button add-card-btn\">Search and Add Card</button>\n            </form>\n        )\n    }\n}\n\nclass Lesson3 extends React.Component {\n    state = {\n        profiles: []\n    };\n    formResponsHandler = (userInfo) => {\n        console.log(userInfo);\n        this.setState(prevState => ({\n            profiles : [...prevState.profiles, userInfo] \n         })\n        );\n    };\n    render() {\n        return(\n            <div>\n                <h2 className=\"header\">{this.props.title}</h2>\n                <Form onResponse={this.formResponsHandler}/>\n                <CardList profiles={this.state.profiles}/>\n            </div>   \n        );\n    }\n}\n\nexport default Lesson3;","import React, { useState } from 'react';\nimport Lesson1 from './Lesson1/Lesson1';\nimport Lesson2 from './Lesson2/Lesson2';\nimport Lesson3 from './Lesson3/Lesson3';\nimport './App.css';\n\nfunction App() {\n  const [lessonNumber, setLesson] = useState(3);\n  const changeLesson = (lessonNumber) => setLesson(lessonNumber);\n  return (\n    <div>\n      <h1>React Apps built as per lessons</h1>\n      <code>Click on the lesson to move between</code>\n      <ul className=\"menu\">\n        <li><button className=\"button\" onClick={()=> changeLesson(1)}>Lesson 1</button></li>\n        <li><button className=\"button\" onClick={()=> changeLesson(2)}>Lesson 2</button></li>\n        <li><button className=\"button\" onClick={()=> changeLesson(3)}>Lesson 3</button></li>\n      </ul>\n      { lessonNumber === 1 ? <Lesson1 /> : null }\n      { lessonNumber === 2 ? <Lesson2 precision={7}/> : null }\n      { lessonNumber === 3 ? <Lesson3 title=\"Welcome to GitHub Cards App\"/> : null }\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}